name: 'Terraform CI/CD'

on:
  push:
    branches:
      - 'main'
      - 'dev'
  pull_request:
    branches:
      - 'main'
    paths-ignore:
      - '**/dev-terraform.yml'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Which environment to destroy? (dev or prod)'
        required: true
        default: 'dev'
      confirm_destroy:
        description: 'Type DESTROY to confirm'
        required: true
        default: 'DESTROY'

env:
  AWS_REGION: ap-northeast-2

jobs:
  terraform:
    name: 'Terraform Setup & Deploy (Dev)'
    if: github.event.inputs.confirm_destroy != 'DESTROY' || github.event.inputs.confirm_destroy == null
    runs-on: ubuntu-latest
    environment: dev
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Plan & Apply (Dev)
        run: |
          cd terraform_dev
          terraform init \
            -backend-config="region=${{ env.AWS_REGION }}" \
            -backend-config="bucket=jihoo-terraform-state" \
            -backend-config="key=dev/terraform/terraform.tfstate"
          terraform plan -input=false
          terraform apply -auto-approve -input=false

  terraform_prod:
    name: 'Terraform Setup & Deploy (Prod)'
    if: (github.ref == 'refs/heads/main') && (github.event.inputs.confirm_destroy != 'DESTROY' || github.event.inputs.confirm_destroy == null)
    runs-on: ubuntu-latest
    environment: prod
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Plan & Apply (Prod)
        run: |
          cd terraform_prod
          terraform init \
            -backend-config="region=${{ env.AWS_REGION }}" \
            -backend-config="bucket=jihoo-terraform-state" \
            -backend-config="key=prod/terraform/terraform.tfstate"
          terraform plan -input=false
          terraform apply -auto-approve -input=false

  destroy:
    name: Terraform Destroy
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.confirm_destroy == 'DESTROY'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Init & Destroy
        run: |
          cd terraform_${{ github.event.inputs.environment }}
          terraform init \
            -backend-config="region=${{ env.AWS_REGION }}" \
            -backend-config="bucket=jihoo-terraform-state" \
            -backend-config="key=${{ github.event.inputs.environment }}/terraform/terraform.tfstate"
          terraform destroy -auto-approve
